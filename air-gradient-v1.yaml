substitutions:
  device_name: ""
  pretty_name: ""
  wifi_name: ""  # Can't use dashes in the name here, use underscores instead
  device_type: "D1 Mini"
  board: "d1_mini"
  framework_version: "latest"
  logger_level: DEBUG

# Common ESP8266 Config
<<: !include .common_esp8266.yaml

# Enable Home Assistant API
api:
  encryption:
    key: !secret api_key
  services:
    - service: sensair_background_calibrate
      then:
        - senseair.background_calibration: senseair_s8
    - service: sensair_background_calibration_result
      then:
        - senseair.background_calibration_result: senseair_s8

# Device Specific Config
switch:
  - platform: safe_mode
    name: "Flash Mode (Safe Mode)"
  - platform: restart
    name: "${pretty_name} Restart"

font:
  - file: "font/SF-Mono-Regular.ttf"
    id: sf_mono
    size: 10

uart:
  - rx_pin: D5
    tx_pin: D6
    baud_rate: 9600
    id: uart1
    
  - rx_pin: D4
    tx_pin: D3
    baud_rate: 9600
    id: uart2

i2c:
  sda: D2
  scl: D1
  frequency: 100kHz

sensor:
  - platform: sht3xd
    temperature:
      id: temp
      name: "${pretty_name} Temperature"
    humidity:
      id: humidity
      name: "${pretty_name} Humidity"
    address: 0x44
    update_interval: 90s

  - platform: senseair
    id: senseair_s8
    uart_id: uart2
    co2:
      id: co2
      name: "${pretty_name} CO2 Value"
    update_interval: 60s

  - platform: pmsx003
    type: PMSX003
    uart_id: uart1
    pm_2_5:
      id: pm25
      name: "${pretty_name} PM25"
      filters:
        - sliding_window_moving_average:
            window_size: 30
            send_every: 30
    pm_1_0:
      id: pm10
      name: "${pretty_name} PM1"
      filters:
        - sliding_window_moving_average:
            window_size: 30
            send_every: 30
    pm_10_0:
      id: pm100
      name: "${pretty_name} PM10"
      filters:
        - sliding_window_moving_average:
            window_size: 30
            send_every: 30
      
display:
  - platform: ssd1306_i2c
    id: oled
    model: "SSD1306 64x48"
    address: 0x3C
    pages:
      - id: page1
        lambda: |-
          it.printf(0, 0, id(sf_mono), "TMP: %.0fÂ°F", (id(temp).state*1.8)+32);
          it.printf(0, 14, id(sf_mono), "HUM: %.0f", id(humidity).state);
          it.printf(0, 28, id(sf_mono), "CO2: %.0fppm", id(co2).state);
          it.printf(0, 42, id(sf_mono), "PM25: %.0f", id(pm25).state);

interval:
  - interval: 5s
    # Cycle through page on display
    then:
      - component.update: oled