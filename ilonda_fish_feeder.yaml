substitutions:
  device_name: ""
  pretty_name: ""
  device_type: "Ilonda Wifi Smart Fish Feeder"

esphome:
  name: ${device_name}
  comment: "${device_type}"

esp8266:
  board: esp01_1m

logger:

api:
  encryption:
    key: !secret api_key

ota:
  password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  power_save_mode: HIGH # for ESP8266 LOW/HIGH are mixed up, esphome/issues/issues/1532
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${device_name} Fallback"
    password: !secret fallback_password

captive_portal:

# web_server:
#   port: 80
#   auth:
#     username: admin
#     password: !secret web_server_password

# Device Specific Config

# Binary Sensor to allow relay to be switched when physical button is pressed
binary_sensor:
  - platform: gpio
    id: button
    pin:
      number: GPIO4
      mode:
        input: true
        pullup: true
      inverted: True
    name: 'Switch feeder'
    on_press:
      - switch.turn_on: relay

  - platform: status
    name: "Status"

# Switch to turn feeder on for 3 seconds/off and turn on/off LED
switch:
  - platform: gpio
    name: 'Feeder'
    id: relay
    pin: GPIO14
    on_turn_on:
      - light.turn_on: led
      - delay: 3s
      - switch.turn_off: relay
      - light.turn_off: led
    restore_mode: ALWAYS_OFF

# Feeder counter
sensor:
  - platform: pulse_meter
    pin: GPIO12
    name: 'Counter/min'
    unit_of_measurement: 'time(s)'
    internal: true
    total:
      unit_of_measurement: 'time(s)'
      name: 'Counter feeder'

# To allow led to be controlled via GPIO
output:
  - platform: esp8266_pwm
    id: blue_led
    pin:
      number: GPIO5
      inverted: true

# LED control
light:
  - platform: monochromatic
    output: blue_led
    id: led